--Regular Expressions--

In computing, a regular expression, also referred to as "regex" or "regexp", provides a concise and flexible means for matching strings of text, such as particular characters, words, or patterns of charactes. A regular epxression is written in a formal language that can be interpreted by a regular expression processor.

https://en.wikipedia.org/wiki/Regular_expression

#Really clever "wild card" expressions for matching and parsin strings

--Understanding Regular Expressions--

*Very powerful and quite cryptic
*Fun once you understand them
*Regular expressions are a language unto themselves
*A language of "marker characters" - programming with characters
*It is kind of an "old school" langauge - compact

http://xkcd.com/208/

--Regular Expression Quick Guide--

^ Mathces the beginning of a line
$ Matches the end of the line
. Mathces any character
\s Matches whitespace
\S Matches any non-whitespace character
* Repeats a character zero or more times
*? Repeats a character zero or more times (non-greedy)
* Repeats a character one or more times
+? Repeats a character one or more times (non-greedy)
[aeiou] Matches a single character in the listed set
[^XYZ] Matches a single character not in the listed set
[a-z0-9] The set of characters can include a range
( Indicates where string extracion is to start
) Indicates where string extraction is to end

https://www.py4e.com/lectures3/Pythonlearn-11-Regex-Handout.txt

--The Regular Expression Module--

*Before you can use regular expressions in your program, you must import the library using "import re"

*You can use re.search() to see if a string matches a regular expression, similar to using the find() method for strings

*You can use re.findall() to extract portions of a string that match your regular expression, similar to a combination of find() and slicing: var[5:10]

--Using re.search() like find()--

hand = open('mbox-short.txt')
for line in hand:
    line = line.rstrip()
    if line find('From:') >= 0:
       print(line)

import re
hand = open('mbox.short.txt')
for line in hand:
    line = line.rstrip()
    if line find('From:') >= 0:
       print(line)


--Using re.search() like startswith()--

hand = open('mbox-short.txt')
for line in hand:
    line = line.rstrip()
    if line.startswith('From:') :#We done printing the lins finding the lines from 
       print(line) 

.................................

import re

hand = open('mbox-short.txt')
for line in hand:
    line = line.rstrip()
    if re.search('^From:', line) :#start from the beginning of the line (^) and from at the begining(^) the difference betwen the first example is that we use a method in the string
       print(line)

#We fine-tine what is matched by adding special characters to the string

-Wild-Card characters -

*The dot character matches any character

*If you add teh asterisk character, the character is "any number of times"

X-Sieve : CMU Sieve 2.3(check)...
X-DSPAM-Result: Innocent ...
X-DSPAM-Confidence: 0.8475
X-Content-Type-Message-Body: text/plain


(Match the start of the line) ^X.(match any character) *(many times):  

--Fine-Tuning Your Match--
Depending on how "clean" your data is and the purpose of your application, you may want to narrow your match down a bit

X-Sieve : CMU Sieve 2.3 (match)
X-DSPAM-Result: Innocent(not-match becuase the followed colon and whitespace character)
X-Plane is behind schedule: two weeks(this is the match that really want) and the previous could work but if we add:)(doesn't match because the space)

(Match the start of the line) ^X-\S(Match any non-withespace character)+(one or more times) 

--From Matching to Extracting--

*re.serach() returns a True/False depending on whether the string matches the regular epxression

*If we actually want the matching strings to be extracted, we use re.findall()


import re
x = 'My 2 favorite numbers are 19 and 42' # stamp...(2) got it .... stamp(19) got it ... stamp(42) got it.
y = re.findall('[0-9]+',x)#there is one character that adds more ore one digits by thereself)
print(y)

........................

['2', '19', '42']#A list of three strings

[0-9]+ = a single digit(one or more digits)

--Matching and Extracting Data--

When we use re.findall(), it returns a list of zero or more sub-string that match the regular expressions.

import re
x = 'My 2 favorite numbers are 19 and 42' ..(no uppercase returns a string list)
y = re.findall('[0-9]+',x)
print(y)

y = re.findall('[AEIOU]+',x) -- one or more (AA, will match , EEE ,etc)
print(y)
.................................

['2', '19', '42']
[] # and give us a string of list
